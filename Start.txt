Welcome to the IntelliJ Tutor

IntelliJ is an awesome IDE, but very few people use all the shortcuts to become a much faster programmer.
For most tasks, it is much faster to press a combination of keys rather than to move your fingers
to your mouse or touchpad, clicking on the right button.
For this reason, you can finish all tasks here without touching your pointing device once. It will feel
awkward to do everything with your keyboard first, but after some time, you will get used to it.
Don't feel bad if you use your mouse in the beginning, just go back to your keyboard and
continue the training.
In this tutorial, you will learn how to move inside and between files, and how to edit your files faster.

It is not important if you use WebStorm, PyCharm or any other JetBrain IDE. The shortcuts I show
work for all of them, so share this tutor with all of your friends!

You will need about 15 minutes to complete this introduction, if you don't use any shortcuts
right now. Of course, if you already know a lot of them right now, you won't need all of the time.

This tutorial is meant to be done multiple times. You won't be an expert after finishing it for the first time,
because repetition is key to using the shortcuts intuitively in your daily work.

---

Part 1: Basic Movement

In this part, you will learn the most basic shortcuts to move between words, lines and files.
It is meant as a good foundation for part 2, where we will learn more about moving inside source code.

Lesson 1.1: Single Letter Movement

It is not very efficient to move the cursor with your touchpad. To move the cursor,
press the arrow keys on your keyboard

1. Just move a little bit around, until you feel used to it.
2. Move down to lesson 1.2

Lesson 1.2: Movement Between Words

It can take you quite a while to move from the beginning of a line to the end
just by pressing the right arrow key.
Therefore, we will learn how to move from word to word, and not just from letter to letter.
Press Ctrl+Right to move from word to word to the right, and Ctrl+Left to move to the left.
You can even move to a word on the next line, when you are at the start or end of a line.

1. Move through this sentence word by word, until you feel used to it.
2. Move down to lesson 1.3

Lesson 1.3: Movement Between Code Blocks

Now you know how to move horizontally. However, if you want to move vertically faster than with the arrow
keys, you can use Ctrl+[ and Ctrl+] to move between matching brackets.

1. Move to the line marked with ->
2. Move to the bracket on this line, until it becomes yellow
3. Press Ctrl+] to move to the matching bracket.
4. Train this shortcut on the other brackets as well
5. Go to lesson 1.4

-> {

[ ()
]

}

Lesson 1.4: Movement Between Lines

Now you know how to move fast vertically. But if you know the line number you want to jump to,
you can be even faster by pressing Ctrl+G and enter the line number you want to go to.
If you want to move back to the line you edited last, press Ctrl+Shift+Backspace.

1. Add the name of your favourite programming language at the end of the line: Java
2. Move to line 100 by pressing Ctrl+G
3. Move back to this section by pressing Ctrl+Shift+Backspace
4. Move to Lesson 1.5


Lesson 1.5: Movement Between Files (Unopened)

Of course, most of our project consist of more than one file. Therefore, it is necessary
to move efficiently between them too.
If you want to jump to a file which isn't opened in your IDE right now, press Ctrl+Shift+N
and enter the name of the file you want to jump to.

1. In this project, there is a file called "OtherFile.txt". Open this file by pressing
Ctrl+Shift+N and typing the name of the file. You can find the next lesson there.

---

Part 2: Code Movement

Congratulations on finishing part 1. Now, you know how to move efficiently through files.
However, there are a lot of shortcuts considering moving inside code, which we can't really
use inside a plain text file.
Therefore, you can find some Java classes inside the "src" folder. Don't worry, you don't have to
know much Java to get through. You can adapt the things you learn here for your language too.

Lesson 2.1: Movement between Classes

Most often, you don't want to jump to a specific file, but to a specific class.
The easiest way to do this is by using Ctrl+N.
The dialog looks pretty much like the one for opening files. The only difference is that
you have to search for a class name, not for a file name.

1. Press Ctrl+N and search for the class "SecretClass"
2. You will see that the class and file name differ
3. Search for other classes as well, until you feel confident using the shortcut
4. Come back here by pressing Ctrl+Tab
5. Go to lesson 2.2

Lesson 2.2: Movement between Methods.

You spend a lot of time moving between methods. The most effective way to do this is by pressing
Alt+Up or Alt+Down, which will move you one method up or down.

1. Open the class "Methods" by using Ctrl+N
2. Press Alt+Up/Down to move between the methods
3. Do this until you feel confident using the new shortcut
4. Come back here by pressing Ctrl+Tab
5. Go to lesson 2.3

Lesson 2.3: Movement to the Declaration

Sometimes, you just want to know how the super class of your current class looks like. For this,
you can use the shortcut Ctrl+B and jump to it.

1. Open the file "Child.java"
2. Move your cursor to the name of the super class (Parent)
3. Press Ctrl+B to open the super class file
4. Come back here by pressing Ctrl+Tab

However, this shortcut is multifunctional. You can also use it to find the declaration
of a method or variable.

1. Open the file "Child2.java"
2. Move your cursor to the name of the variable "ID" inside the method "lesson"
3. Press Ctrl+B to find the base method
4. Come back here by pressing Ctrl+Tab
5. Go to lesson 2.4

Lesson 2.4: Movement to the Implementation

Now you know how to find the super class of a class. However, you might want
to know how to go the other way around too.
To find the classes that implement your current class, you can use Ctrl+Alt+B.

1. Open the file "Parent.java"
2. Move your cursor to the name of the class (Parent)
3. Press Ctrl+Alt+B and select "Child2.java"
4. Go to lesson 2.5

Again, you can use this shortcut to find implementations of variables and methods.

Lesson 2.5: Movement Between Errors

If you have syntactic errors inside your code, it can become pretty nasty to find the wrong line,
especially if the file is pretty big. To move your cursor to the line with the next error, just press
F2. If you want to know how you can fix the error, just press Alt+Enter and the IDE will tell you which
solution could work.

1. Open the File "Error.java"
2. Press F2 to jump to the first error
3. Press Alt+Enter to make the method return void
4. Repeat this for the second error as well
5. Come back to this file
6. Go to part 3

---

Part 3: Text Editing

Now you are half way through the tutorial. Congratulations for this! After you
learned in the first two parts how to move efficiently, now, we want to learn
how to edit files.
In this part, we will learn basic text editing shortcuts, that will work in this text file
too. In the next part, we will learn shortcuts that will make our work with source code faster.

Lesson 3.1: Cut/Paste Lines

Most of you will know the basic copy/paste shortcuts Ctrl+X, Ctrl+C and Ctrl+V,
which work with the text you selected. However, there is a little twist behind them
in this IDE.
If you haven't selected any text at all, these shortcuts work on the whole line.

1. Jump to the first line marked with ->
2. Bring the lines in the right order by using Ctrl+X and Ctrl+V
3. When you're finished, jump to lesson 3.2

-> This is the second line
-> This is the forth line
-> This is the first line
-> This is the third line

Lesson 3.2: Switching Neighbouring Lines

So you learned how to cut and paste lines inside a file. However, if you want to
switch neighbouring lines, you can do this without using two shortcuts,
but just one.
Use Ctrl+Shift+Up or Ctrl+Shift+Down to switch the current and the upper or lower line.

1. Jump to the first line marked with ->
2. Bring the lines in the right order by using Ctrl+Shift+Up/Down
3. When you're finished, jump to lesson 3.3

-> This is the second line
-> This is the first line
-> This is the forth line
-> This is the third line

Lesson 3.3: Start New Line

Right now, you should be an expert on how to move lines inside a file.
Next off, you will learn how to create a new line without messing
up your current line.
If you don't want to move your cursor to the end of to the line before doing a
line break, press Shift+Enter anywhere inside the current line to create a new one below.

1. Jump to the line marked with ->
2. Move your cursor to the star inside this line
3. Press Shift+Enter to create a new line
4. Jump to part 4

-> I need a new line * below this one
Some other text
